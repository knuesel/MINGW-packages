# Maintainer: Alexey Pavlov <alexpux@gmail.com>

_realname=OpenSceneGraph
pkgname=("${MINGW_PACKAGE_PREFIX}-${_realname}-git" "${MINGW_PACKAGE_PREFIX}-${_realname}-debug-git")
pkgver=r12969.497cd65
pkgrel=1
pkgdesc="Open source high performance 3D graphics toolkit (mingw-w64)"
arch=('any')
url="http://www.openscenegraph.org/"
license=("LGPL")
groups=('sensefly')
makedepends=("${MINGW_PACKAGE_PREFIX}-gcc"
             "${MINGW_PACKAGE_PREFIX}-pkg-config"
             "${MINGW_PACKAGE_PREFIX}-cmake"
             "git")
depends=("${MINGW_PACKAGE_PREFIX}-gcc-libs"
        #"${MINGW_PACKAGE_PREFIX}-boost"
        #"${MINGW_PACKAGE_PREFIX}-collada-dom-svn"
        #"${MINGW_PACKAGE_PREFIX}-curl"
        #"${MINGW_PACKAGE_PREFIX}-ffmpeg"
        #"${MINGW_PACKAGE_PREFIX}-fltk"
        "${MINGW_PACKAGE_PREFIX}-freetype"
        "${MINGW_PACKAGE_PREFIX}-gdal"
        "${MINGW_PACKAGE_PREFIX}-giflib"
        #"${MINGW_PACKAGE_PREFIX}-gtk2"
        #"${MINGW_PACKAGE_PREFIX}-gtkglext"
        #"${MINGW_PACKAGE_PREFIX}-jasper"
        "${MINGW_PACKAGE_PREFIX}-libjpeg"
        "${MINGW_PACKAGE_PREFIX}-libpng"
        "${MINGW_PACKAGE_PREFIX}-libtiff"
        #"${MINGW_PACKAGE_PREFIX}-libxml2"
        #"${MINGW_PACKAGE_PREFIX}-lua"
        #"${MINGW_PACKAGE_PREFIX}-SDL"
        #"${MINGW_PACKAGE_PREFIX}-poppler"
        #"${MINGW_PACKAGE_PREFIX}-python3"
        "${MINGW_PACKAGE_PREFIX}-qt5"
        #"${MINGW_PACKAGE_PREFIX}-wxWidgets"
        "${MINGW_PACKAGE_PREFIX}-zlib"
        "${MINGW_PACKAGE_PREFIX}-freeglut"
	)
#provides=("${MINGW_PACKAGE_PREFIX}-${_realname}")
#conflicts=("${MINGW_PACKAGE_PREFIX}-${_realname}")
options=('staticlibs' '!strip')
source=("${_realname}"::"git+https://github.com/openscenegraph/osg.git#commit=497cd65"
        #osg-collada-dae-fixes.patch
        #find-collada.patch
        find-freetype.patch)
md5sums=('SKIP'
         #'45d0668f56c5e4ca58002f38fd3eb4a0'
         #'668def9c99f044db9a8215fa927d6ac2'
         '9ab69e1cd26826196fac5b3f01e6cb95')

pkgver() {
  cd "$srcdir/$_realname"
  printf "r%s.%s" "$(git rev-list --count HEAD)" "$(git rev-parse --short HEAD)"
}

prepare() {
  cd "${srcdir}/${_realname}"
  #patch -p1 -i ${srcdir}/osg-collada-dae-fixes.patch
  #patch -p1 -i ${srcdir}/find-collada.patch
  patch -p1 -i ${srcdir}/find-freetype.patch
}

build() {
  export FREETYPE_DIR=${MINGW_PREFIX}
  
  for builddir in {Release,Debug}-${MINGW_CHOST}; do
    [[ -d $builddir ]] && rm -rf $builddir
    mkdir -p $builddir
    pushd $builddir
    [[ "${builddir%-${MINGW_CHOST}}" == "Release" ]] && {
      local _opts="-DBUILD_OSG_EXAMPLES:BOOL=ON"
      local _postfix=
    } || {
      local _opts="-DBUILD_OSG_EXAMPLES:BOOL=OFF -DBUILD_OSG_APPLICATIONS=OFF"
      local _postfix="-debug"
    }

    declare -a _disabled_modules=(
	QuickTime
	FOX
	FLTK
	wxWidgets
	V8
	PythonLibs
	ZeroConf
	LIBLAS
	Boost
	NVTT
	DirectInput
	GtkGl
	RSVG
	Poppler-glib
	SDL
	SDL2
	DirectShow
	GLIB
	GStreamer
	FFmpeg
	OurDCMTK
	LibVNCServer
	CURL
	GTA
	Performer
	OpenVRML
	Xine
	FBX
	COLLADA
	OpenEXR
	Jasper
	Inventor
    )
    declare -a _disabled_modules_value=(${_disabled_modules[@]/%/=1})
    
    msg "Building ${builddir%-${MINGW_CHOST}} version..."
    
    ${MINGW_PREFIX}/bin/cmake.exe \
      -G"MSYS Makefiles" \
      -DCMAKE_INSTALL_PREFIX:PATH=${pkgdir%-git}${_postfix}-git${MINGW_PREFIX} \
      -DCMAKE_BUILD_TYPE=${builddir%-${MINGW_CHOST}} \
      -DACTUAL_3DPARTY_DIR=${MINGW_PREFIX} \
      ${_opts} \
      ${_disabled_modules_value[@]/#/-DCMAKE_DISABLE_FIND_PACKAGE_} \
      ../${_realname}

    make
    popd
  done
}

package_release() {
  provides=("${MINGW_PACKAGE_PREFIX}-${_realname}")
  conflicts=("${MINGW_PACKAGE_PREFIX}-${_realname}")
  
  cd Release-${MINGW_CHOST}
  make -j1 install

  pushd ${pkgdir}${MINGW_PREFIX} > /dev/null
  export PREFIX_WIN=`pwd -W`
  popd > /dev/null

  for ff in ${pkgdir}${MINGW_PREFIX}/lib/pkgconfig/*.pc; do
    sed -e "s|${PREFIX_WIN}|${MINGW_PREFIX}|g" -i $ff
  done
}

package_debug() {
  depends=("${MINGW_PACKAGE_PREFIX}-${_realname}-git=$pkgver")
  provides=("${MINGW_PACKAGE_PREFIX}-${_realname}-debug")
  conflicts=("${MINGW_PACKAGE_PREFIX}-${_realname}-debug")
  
  cd Debug-${MINGW_CHOST}
  make -j1 install

  rm -rf ${pkgdir}${MINGW_PREFIX}/include
  rm -rf ${pkgdir}${MINGW_PREFIX}/lib/pkgconfig
  rm -rf ${pkgdir}${MINGW_PREFIX}/share
}

package_mingw-w64-i686-OpenSceneGraph-git() {
  package_release
}

package_mingw-w64-i686-OpenSceneGraph-debug-git() {
  package_debug
}

package_mingw-w64-x86_64-OpenSceneGraph-git() {
  package_release
}

package_mingw-w64-x86_64-OpenSceneGraph-debug-git() {
  package_debug
}
